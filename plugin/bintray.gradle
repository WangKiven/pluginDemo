//添加这两行
//apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'


// todo 学习文档：http://www.jianshu.com/p/275fc9d54e4a


// todo 需配置参数
//项目主页
def siteUrl = 'https://github.com/WangKiven/KUtils'
//项目的git地址
def gitUrl = 'https://github.com/WangKiven/KUtils.git'

//发布到JCenter上的项目名字
def libName = "PluginDemo"
//发布到组织名称名字，必须填写
group = "com.kiven.plugin"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.0"
//上面配置后上传至JCenter后的编译路径是这样的： compile 'com.kiven.plugin:PluginDemo:1.0.0'
def detail = 'android 开发gradle配置插件集合'

//todo 上传到JCenter的用户信息配置，读取 local.properties 文件里面的 bintray.user 和 bintray.apikey
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def jcenerUserName = properties.getProperty("bintray.user")
def jcenerApiKey = properties.getProperty("bintray.apikey")



// todo 不需再做修改，直接调用上边配置好的参数
//生成源文件
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'javadoc'
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到JCenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
//                packaging 'aar'
                //项目描述，随意填
                name detail
                url siteUrl
                licenses {
                    license {
                        //开源协议
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        //开发者的个人信息
                        name 'kiven'
                        email '984768569@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到JCenter

bintray {
    user = jcenerUserName
    key = jcenerApiKey
    configurations = ['archives']
    pkg {
        //这里的repo值必须要和你创建Maven仓库的时候的名字一样
        repo = "maven"
        //发布到JCenter上的项目名字
        name = libName
        //项目描述
        desc = detail
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

javadoc {
    options{
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}